{"version":3,"file":"js/about.381646aa.js","mappings":"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","sources":["webpack://crowdsolve_website/./src/views/QuestionsView.vue","webpack://crowdsolve_website/./src/components/QuestionView.vue","webpack://crowdsolve_website/./src/components/QuestionView.vue?592b","webpack://crowdsolve_website/./src/views/QuestionsView.vue?d3de"],"sourcesContent":["<template id=\"app\">\r\n  <QuestionView :isAndroid='Android' :md=\"md\" />\r\n</template>\r\n\r\n<script>\r\nimport QuestionView from '../components/QuestionView.vue'\r\n\r\nexport default {\r\n  name: 'QuestionsView',\r\n  props: ['Android', 'md'],\r\n  components: {\r\n    QuestionView\r\n  },\r\n  methods: {\r\n    checkDevice(value) {\r\n      this.isAndroid = value\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 100px;\r\n}\r\n\r\n#Header {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n#HeaderBot {\r\n  padding-left: 3.5vw;\r\n}\r\n\r\n@media only screen and (max-width: 690px) {\r\n  #app {\r\n    width: 100vw;\r\n    max-width: 100%;\r\n    font-size: 3vw;\r\n    margin-top: 60px;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div id=\"backGround\" class=\"bg-slate-800 p-4 m-auto text-white rounded-lg\" v-if=\"daData != null\">\r\n    <!-- The user icon and name table -->\r\n    <table id=\"questionHead\" class=\"text-white text-left mb-5\">\r\n      <tr>\r\n        <td>\r\n          <img class=\"rounded-full h-7 w-7 inline-block ml-2 mr-2\" v-bind:src=\"daData['user']['avatar_url']\" />\r\n        </td>\r\n        <td>\r\n          <div id=\"user-name\" class=\"inline-block text-base\">{{ daData['user']['login']\r\n          }}&nbsp;&nbsp;●&nbsp;&nbsp;<span class=\"inline-block text-xs text-slate-500\">{{\r\n            // Date(daData['created_at'])\r\n            daDate\r\n            }}</span>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <!-- Question content -->\r\n    <!-- TITLE -->\r\n    <div id=\"title\" class=\"text-left text-3xl font-bold mb-5\">{{ daData['title'] }}</div>\r\n    <!-- MARKDOWN BODY -->\r\n    <div class=\"theBody\" style=\"overflow: auto\">\r\n      <div id=\"body\" class=\"text-justify\" v-html=\"daMarkDown\"></div>\r\n    </div>\r\n    <!-- COMMENTS COUNT -->\r\n    <div class=\"text-right mt-2 text-slate-400 text-sm\">{{ daData['comments'] }} Comments&nbsp;&nbsp;</div>\r\n    <!-- Upper horizontal divider line -->\r\n    <hr class=\"mb-2 mt-2 hori-sep border-slate-500\">\r\n    <!-- facebook like buttons for share, comments and view in app -->\r\n    <div class=\"text-xl\">\r\n      <button v-if=\"isAndroid\" @click='viewInApp' id=\"commentsHead\"\r\n        class=\"inline-block text-slate-400 hover:text-white rounded-xl hover:bg-slate-700 w-4/12\">\r\n        <div class=\"material-symbols-outlined\">\r\n          phone_android\r\n        </div>\r\n        View in app\r\n      </button>\r\n      <button v-on:click='getComments' id=\"commentsButton\"\r\n        class=\"inline-block text-slate-400 hover:text-white rounded-xl hover:bg-slate-700\">\r\n        <div class=\"material-symbols-outlined\">\r\n          chat_bubble\r\n        </div>\r\n        Comments\r\n      </button>\r\n      <button v-on:click='share' id=\"shareButton\"\r\n        class=\"inline-block text-slate-400 hover:text-white rounded-xl hover:bg-slate-700\">\r\n        <div class=\"material-symbols-outlined\">\r\n          share\r\n        </div>\r\n        Share\r\n      </button>\r\n    </div>\r\n    <!-- Lower horizontal divider line -->\r\n    <hr class=\"hori-sep mt-2 border-slate-500\">\r\n    <!-- Start of COMMENTS section -->\r\n    <!-- COMMENTS headline -->\r\n    <!-- when comments exist show the below tag -->\r\n    <div id=\"commentsTitle\" v-if=\"isVisible && daData['comments'] != '0'\"\r\n      class=\" text-left mt-5 text-4xl text-white mb-5\">\r\n      Comments\r\n    </div>\r\n    <!-- when no comments exist show the below tag -->\r\n    <div v-if=\"isVisible && daData['comments'] == '0'\" class=\"text-center text-base text-slate-400 mt-5\">\r\n      No comments on this question yet!\r\n    </div>\r\n    <!-- the actual comments done with a v-for loop -->\r\n    <div id=\"commentsSection\" v-show=\"isVisible\" v-for=\"(item, index) in daComments\" :key=\"item\" class=\"ml-5 text-white text-left\">\r\n      <table id=\"questionHead\" class=\"text-white text-left\">\r\n        <tr class=\"m-auto\">\r\n          <td>\r\n            <img class=\"rounded-full h-7 w-7 inline-block mr-2\" v-bind:src=\"item['user']['avatar_url']\" />\r\n          </td>\r\n          <td>\r\n            <div id=\"user-name\" class=\"inline-block text-base\">{{ item['user']['login']\r\n            }}&nbsp;&nbsp;●&nbsp;&nbsp;<span class=\"inline-block text-xs text-slate-500\">{{ item['created_at']\r\n              }}</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <div\r\n        class=\"theBody scrollbar-thumb-custom scrollbar-track-custom-light overflow-y-scroll scrollbar-thin\"\r\n        style=\"overflow: auto;\">\r\n        <div id=\"body\" class=\"text-base text-left mt-3\" v-html=\"createCommentsMarkdown(index)\"></div>\r\n      </div>\r\n      <hr class=\"mb-5 mt-5 border-slate-700\" v-if=\"index < daComments.length - 1\">\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nvar pageNo = 0\r\n\r\nexport default {\r\n  name: 'QuestionView',\r\n  props: ['isAndroid', 'md'],\r\n  data() {\r\n    return {\r\n      // define the variabels that will hold the data to show\r\n      // BODY data\r\n      daData: null,\r\n      daMarkDown: null,\r\n      daDate: null,\r\n      // COMMENTS data\r\n      daComments: null,\r\n      daCommentsMarkDown: null,\r\n\r\n      // comments toggle variable\r\n      isVisible: false,\r\n    }\r\n  },\r\n  // What to do when the app just got loaded with the created function being async\r\n  async created() {\r\n    const theUrl = window.location.href.split(\"/\")\r\n    pageNo = theUrl[theUrl.length - 1]\r\n    console.log()\r\n    this.$emit(\"Android\", this.isAndroid)\r\n    try {\r\n      // Get the url of the page and get the last number in the link and extract it in a variable\r\n\r\n      // Fetch the data from the GITHUB API and decode its JSON into one of our variables defined above\r\n      const theData = await fetch(\"https://api.github.com/repos/CrowdSolve/data/issues/\" + pageNo)\r\n      this.daData = await theData.json()\r\n\r\n      this.daDate = new Date(this.daData['created_at']).toDateString()\r\n\r\n      // transform the body of the question from markdown to actual html with the marked function\r\n      this.daMarkDown = this.daData['body']\r\n      this.daMarkDown = this.md.render(this.daMarkDown);\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n\r\n    // Default Values for Page\r\n    document.title = this.daData['title']\r\n  },\r\n  updated() {\r\n    const daCommentsButton = document.getElementById(\"commentsButton\")\r\n    const daShareButton = document.getElementById(\"shareButton\")\r\n    if (!this.isAndroid) {\r\n      daCommentsButton.classList.add(\"w-6/12\", \"h-12\")\r\n      daShareButton.classList.add(\"w-6/12\", \"h-12\")\r\n    } else {\r\n      daCommentsButton.classList.add(\"w-4/12\")\r\n      daShareButton.classList.add(\"w-4/12\")\r\n    }\r\n  },\r\n  methods: {\r\n    recieveShow(value) {\r\n      this.notificationShowing = value\r\n    },\r\n    // Define a function to fetch the comments from the GITHUB API and JSON decode it when the comments button is pressed\r\n    async getComments() {\r\n      // change the state of the comments section visibility on click\r\n      this.isVisible = !this.isVisible\r\n      if (this.isVisible) {\r\n        const theData = await fetch(this.daData['comments_url'])\r\n        this.daComments = await theData.json()\r\n        window.scrollBy({\r\n          top: 5000,\r\n          left: 0,\r\n          behavior: 'smooth'\r\n        })\r\n      }\r\n    },\r\n    // Define a function to change the comments look from markdown to actual text\r\n    createCommentsMarkdown(id) {\r\n      return this.md.render(this.daComments[id]['body'])\r\n    },\r\n    // Define a function to tell what the share button does\r\n    share() {\r\n      const area = document.createElement('textarea')\r\n      document.body.appendChild(area)\r\n      area.textContent = window.location.href\r\n      area.select();\r\n      document.execCommand('copy')\r\n      document.body.removeChild(area)\r\n      if (!this.isAndroid) {\r\n        this.$toast.show(\"Share link copied to clipboard\", {\r\n          type: 'default',\r\n          position: 'bottom-right',\r\n          duration: 1000\r\n        })\r\n      } else {\r\n        this.$toast.show(\"Share link copied to clipboard\", {\r\n          type: 'default',\r\n          position: 'bottom',\r\n          duration: 1000\r\n        })\r\n      }\r\n    },\r\n    // Define a function to tell what the view in app button does\r\n    viewInApp() {\r\n      window.open(\"https://csolve.page.link/?link=https://crowdsolve.lasheen.dev/questions/\" + pageNo + \"&apn=dev.lasheen.crowdsolve\")\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#backGround {\r\n  max-width: 50rem;\r\n  border-radius: 0.5rem;\r\n  /* margin: 0rem min(100px, auto) 0rem min(100px, auto); */\r\n}\r\n\r\ntd {\r\n  height: 100%;\r\n  text-align: center;\r\n  margin: auto;\r\n}\r\n\r\n/* Track */\r\n.theBody::-webkit-scrollbar-track {\r\n  background: rgb(37, 42, 48);\r\n}\r\n\r\n/* Handle */\r\n.theBody::-webkit-scrollbar-thumb {\r\n  background: #464957;\r\n}\r\n\r\n/* Handle on hover */\r\n.theBody::-webkit-scrollbar-thumb:hover {\r\n  background: #69787c;\r\n}\r\n\r\nbutton {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n@media only screen and (max-width: 690px) {\r\n  #backGround {\r\n    padding: 0.75rem;\r\n    width: 100vw;\r\n    margin: 0px;\r\n    max-width: 100%;\r\n    border-radius: 0rem;\r\n  }\r\n\r\n  #title {\r\n    text-align: justify;\r\n    font-size: 1.3rem;\r\n    line-height: 1.375rem;\r\n  }\r\n\r\n  button {\r\n    font-size: 3.5vw;\r\n  }\r\n\r\n  button>div {\r\n    font-size: 3.5vw;\r\n  }\r\n\r\n  .hori-sep {\r\n    margin-top: 1vw;\r\n    margin-bottom: 1vw;\r\n  }\r\n\r\n  #commentsTitle {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n\r\nbutton>div {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n","import { render } from \"./QuestionView.vue?vue&type=template&id=64a01656&scoped=true\"\nimport script from \"./QuestionView.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionView.vue?vue&type=script&lang=js\"\n\nimport \"./QuestionView.vue?vue&type=style&index=0&id=64a01656&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Cinos\\\\Desktop\\\\Website\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-64a01656\"]])\n\nexport default __exports__","import { render } from \"./QuestionsView.vue?vue&type=template&id=55c28899\"\nimport script from \"./QuestionsView.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionsView.vue?vue&type=script&lang=js\"\n\nimport \"./QuestionsView.vue?vue&type=style&index=0&id=55c28899&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Cinos\\\\Desktop\\\\Website\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_QuestionView","isAndroid","$props","md","id","class","style","_createElementVNode","_hoisted_12","_hoisted_15","_hoisted_18","$data","_createElementBlock","src","_toDisplayString","innerHTML","_hoisted_10","onClick","$options","_hoisted_21","_Fragment","_renderList","item","index","key","length","pageNo","name","props","data","daData","daMarkDown","daDate","daComments","daCommentsMarkDown","isVisible","async","theUrl","window","location","href","split","console","log","this","$emit","theData","fetch","json","Date","toDateString","render","err","document","title","updated","daCommentsButton","getElementById","daShareButton","classList","add","methods","recieveShow","value","notificationShowing","scrollBy","top","left","behavior","createCommentsMarkdown","share","area","createElement","body","appendChild","textContent","select","execCommand","removeChild","$toast","show","type","position","duration","viewInApp","open","__exports__","components","QuestionView","checkDevice"],"sourceRoot":""}